-- Ќаписать скрипт, возвращающий список имен (только firstname) пользователей без повторений в алфавитном пор€дке

select firstname from users
	order by firstname;

-- Ќаписать скрипт, отмечающий несовершеннолетних пользователей как неактивных (поле is_active = true).

update profiles
	set is_active = true
where (year(current_date) - year(birthday)) > 18;

-- Ќаписать скрипт, удал€ющий сообщени€ Ђиз будущегої (дата позже сегодн€шней)

delete from messages
where year(current_date) < year(created_at);



-- Ќазвание курсового проекта будет простым: "Ѕаза данных парсера" или "ParserDB"
-- парсер предназначен дл€ мониторинга цен на сайтах конкурентов

/*
1. “аблица с настройками парсера (хранит настройки, конфигурацию самого парсера).
2. “аблица с перечнем сайтов дл€ парсинга (название сайта, url индексы дл€ поиска и сортировки)
	- внешние ссылки на таблицу с настройками парсера, т.к. дл€ некоторых сайтов в парсере индивидуальные настройки.
3. “аблица с категори€ми (наименование категории, url, индексы)
	- внешние ссылки на таблицу с перечнем сайтов дл€ парсинга. Url формируетс€ из url сайта + /категори€.
4. ~ 20 таблиц по каждой из категорий в них хран€тс€ все товары со всех сайтов, сортируютс€ и отправл€ютс€ при парсинге
	- каждый товар имеет внешнюю ссылку на таблицу с сайтами и на таблицу с категори€ми
	- колонки будут (url на товар, артикул, наименование, описание, цена)
	- всЄ индексируетс€.
	

ќчень хочу услышать ваши замечани€ и реккомендации насчЄт, так сказать, "макета" базы данных. 
–азрабатывать Ѕƒ никогда не приходилось, хочу избежать ошибок на этапе проектировани€.
/*